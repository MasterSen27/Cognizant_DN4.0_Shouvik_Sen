class Product:
    def __init__(self, productId, productName, category):
        self.productId = productId
        self.productName = productName
        self.category = category

    def __repr__(self):
        return f"{self.productName} (ID: {self.productId}, Category: {self.category})"


# Sample product list
products = [
    Product(101, "Laptop", "Electronics"),
    Product(102, "Shoes", "Fashion"),
    Product(103, "Phone", "Electronics"),
    Product(104, "Book", "Education"),
    Product(105, "Watch", "Accessories")
]


# Linear Search

def linear_search(products, target_name):
    for product in products:
        if product.productName == target_name:
            return product
    return None


# Binary Search

def binary_search(products, target_name):
    # List must be sorted by productName
    low, high = 0, len(products) - 1
    while low <= high:
        mid = (low + high) // 2
        if products[mid].productName == target_name:
            return products[mid]
        elif products[mid].productName < target_name:
            low = mid + 1
        else:
            high = mid - 1
    return None

print("=== Linear Search ===")
result1 = linear_search(products, "Phone")
print("Found:" if result1 else "Not Found:", result1)

sorted_products = sorted(products, key=lambda x: x.productName)

print("\n=== Binary Search ===")
result2 = binary_search(sorted_products, "Phone")
print("Found:" if result2 else "Not Found:", result2)
